{"ast":null,"code":"var _jsxFileName = \"D:\\\\unit-converter\\\\frontend\\\\src\\\\components\\\\UnitConverter.jsx\";\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios'; // Import Axios\nimport '../styles/UnitConverter.css'; // Import CSS styles\n\nconst UnitConverter = () => {\n  const [inputValue, setInputValue] = useState('');\n  const [unitType, setUnitType] = useState('Distance');\n  const [fromUnit, setFromUnit] = useState('meters');\n  const [toUnit, setToUnit] = useState('kilometers');\n  const [result, setResult] = useState(null);\n  const [history, setHistory] = useState([]);\n  const [showHistory, setShowHistory] = useState(false); // New state to toggle history display\n\n  // Conversion logic\n  const convert = () => {\n    let value = parseFloat(inputValue);\n    if (isNaN(value)) {\n      setResult('Invalid input');\n      return;\n    }\n    let conversionFactor = 1;\n    switch (unitType) {\n      case 'Distance':\n        if (fromUnit === 'meters' && toUnit === 'kilometers') {\n          conversionFactor = 0.001;\n        } else if (fromUnit === 'kilometers' && toUnit === 'meters') {\n          conversionFactor = 1000;\n        }\n        break;\n      case 'Temperature':\n        if (fromUnit === 'Celsius' && toUnit === 'Fahrenheit') {\n          setResult(value * 9 / 5 + 32);\n          return; // Return early\n        } else if (fromUnit === 'Fahrenheit' && toUnit === 'Celsius') {\n          setResult((value - 32) * (5 / 9));\n          return; // Return early\n        }\n        break;\n      case 'Volume':\n        if (fromUnit === 'liters' && toUnit === 'milliliters') {\n          conversionFactor = 1000;\n        } else if (fromUnit === 'milliliters' && toUnit === 'liters') {\n          conversionFactor = 0.001;\n        }\n        break;\n      case 'Time':\n        if (fromUnit === 'hours' && toUnit === 'minutes') {\n          conversionFactor = 60;\n        } else if (fromUnit === 'minutes' && toUnit === 'hours') {\n          conversionFactor = 1 / 60;\n        }\n        break;\n      case 'Weight':\n        if (fromUnit === 'kilograms' && toUnit === 'grams') {\n          conversionFactor = 1000;\n        } else if (fromUnit === 'grams' && toUnit === 'kilograms') {\n          conversionFactor = 0.001;\n        }\n        break;\n      default:\n        setResult('Conversion not supported');\n        return;\n    }\n    setResult(value * conversionFactor);\n  };\n\n  // Handle saving conversion history\n  const handleSave = async () => {\n    const newConversion = {\n      inputValue,\n      fromUnit,\n      toUnit,\n      result\n    };\n    await axios.post('http://localhost:5000/api/conversions', newConversion);\n    fetchHistory();\n  };\n\n  // Fetch conversion history from server\n  const fetchHistory = async () => {\n    const res = await axios.get('http://localhost:5000/api/conversions');\n    setHistory(res.data);\n  };\n\n  // Handle deleting a history item\n  const handleDelete = async id => {\n    await axios.delete(`http://localhost:5000/api/conversions/${id}`);\n    fetchHistory();\n  };\n  useEffect(() => {\n    fetchHistory();\n  }, []);\n\n  // Handle number button clicks\n  const handleNumberClick = number => {\n    setInputValue(prev => prev + number);\n  };\n\n  // Handle backspace button click\n  const handleBackspace = () => {\n    setInputValue(prev => prev.slice(0, -1));\n  };\n\n  // Toggle history display\n  const toggleHistory = () => {\n    setShowHistory(prev => !prev);\n  };\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"converter-container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"nav\", {\n    className: \"navbar\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    className: \"navbar-heading\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 9\n    }\n  }, \"Unit Converter\")), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"unit-selection\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 9\n    }\n  }, \"Select Unit Type:\"), /*#__PURE__*/React.createElement(\"select\", {\n    className: \"unit-type-select\",\n    onChange: e => setUnitType(e.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"option\", {\n    value: \"Distance\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 11\n    }\n  }, \"Distance\"), /*#__PURE__*/React.createElement(\"option\", {\n    value: \"Temperature\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 11\n    }\n  }, \"Temperature\"), /*#__PURE__*/React.createElement(\"option\", {\n    value: \"Volume\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 11\n    }\n  }, \"Volume\"), /*#__PURE__*/React.createElement(\"option\", {\n    value: \"Time\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 132,\n      columnNumber: 11\n    }\n  }, \"Time\"), /*#__PURE__*/React.createElement(\"option\", {\n    value: \"Weight\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 133,\n      columnNumber: 11\n    }\n  }, \"Weight\"))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"conversion-section\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 139,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 140,\n      columnNumber: 9\n    }\n  }, \"From:\"), /*#__PURE__*/React.createElement(\"select\", {\n    className: \"unit-select\",\n    onChange: e => setFromUnit(e.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 141,\n      columnNumber: 9\n    }\n  }, unitType === 'Distance' && /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"option\", {\n    value: \"meters\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 144,\n      columnNumber: 15\n    }\n  }, \"Meters\"), /*#__PURE__*/React.createElement(\"option\", {\n    value: \"kilometers\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 145,\n      columnNumber: 15\n    }\n  }, \"Kilometers\")), unitType === 'Temperature' && /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"option\", {\n    value: \"Celsius\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 150,\n      columnNumber: 15\n    }\n  }, \"Celsius\"), /*#__PURE__*/React.createElement(\"option\", {\n    value: \"Fahrenheit\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 151,\n      columnNumber: 15\n    }\n  }, \"Fahrenheit\")), unitType === 'Volume' && /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"option\", {\n    value: \"liters\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 156,\n      columnNumber: 15\n    }\n  }, \"Liters\"), /*#__PURE__*/React.createElement(\"option\", {\n    value: \"milliliters\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 157,\n      columnNumber: 15\n    }\n  }, \"Milliliters\")), unitType === 'Time' && /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"option\", {\n    value: \"hours\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 162,\n      columnNumber: 15\n    }\n  }, \"Hours\"), /*#__PURE__*/React.createElement(\"option\", {\n    value: \"minutes\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 163,\n      columnNumber: 15\n    }\n  }, \"Minutes\")), unitType === 'Weight' && /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"option\", {\n    value: \"kilograms\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 168,\n      columnNumber: 15\n    }\n  }, \"Kilograms\"), /*#__PURE__*/React.createElement(\"option\", {\n    value: \"grams\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 169,\n      columnNumber: 15\n    }\n  }, \"Grams\"))), /*#__PURE__*/React.createElement(\"label\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 174,\n      columnNumber: 9\n    }\n  }, \"To:\"), /*#__PURE__*/React.createElement(\"select\", {\n    className: \"unit-select\",\n    onChange: e => setToUnit(e.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 175,\n      columnNumber: 9\n    }\n  }, unitType === 'Distance' && /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"option\", {\n    value: \"meters\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 178,\n      columnNumber: 15\n    }\n  }, \"Meters\"), /*#__PURE__*/React.createElement(\"option\", {\n    value: \"kilometers\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 179,\n      columnNumber: 15\n    }\n  }, \"Kilometers\")), unitType === 'Temperature' && /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"option\", {\n    value: \"Celsius\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 184,\n      columnNumber: 15\n    }\n  }, \"Celsius\"), /*#__PURE__*/React.createElement(\"option\", {\n    value: \"Fahrenheit\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 185,\n      columnNumber: 15\n    }\n  }, \"Fahrenheit\")), unitType === 'Volume' && /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"option\", {\n    value: \"liters\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 190,\n      columnNumber: 15\n    }\n  }, \"Liters\"), /*#__PURE__*/React.createElement(\"option\", {\n    value: \"milliliters\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 191,\n      columnNumber: 15\n    }\n  }, \"Milliliters\")), unitType === 'Time' && /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"option\", {\n    value: \"hours\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 196,\n      columnNumber: 15\n    }\n  }, \"Hours\"), /*#__PURE__*/React.createElement(\"option\", {\n    value: \"minutes\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 197,\n      columnNumber: 15\n    }\n  }, \"Minutes\")), unitType === 'Weight' && /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"option\", {\n    value: \"kilograms\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 202,\n      columnNumber: 15\n    }\n  }, \"Kilograms\"), /*#__PURE__*/React.createElement(\"option\", {\n    value: \"grams\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 203,\n      columnNumber: 15\n    }\n  }, \"Grams\")))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"input-section\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 209,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"input-display\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 210,\n      columnNumber: 9\n    }\n  }, inputValue || 'Enter a value'), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"number-buttons-grid\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 211,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    className: \"action-btn\",\n    onClick: toggleHistory,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 212,\n      columnNumber: 11\n    }\n  }, \"History\"), /*#__PURE__*/React.createElement(\"button\", {\n    className: \"clear-btn\",\n    onClick: () => setInputValue(''),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 215,\n      columnNumber: 11\n    }\n  }, \"Clear\"), /*#__PURE__*/React.createElement(\"button\", {\n    className: \"backspace-btn\",\n    onClick: handleBackspace,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 216,\n      columnNumber: 11\n    }\n  }, \"\\u2190\"), [1, 2, 3, 4, 5, 6, 7, 8, 9].map(num => /*#__PURE__*/React.createElement(\"button\", {\n    key: num,\n    className: \"number-btn\",\n    onClick: () => handleNumberClick(num),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 218,\n      columnNumber: 13\n    }\n  }, num)), /*#__PURE__*/React.createElement(\"button\", {\n    className: \"number-btn\",\n    onClick: () => handleNumberClick(0),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 222,\n      columnNumber: 11\n    }\n  }, \"0\"), /*#__PURE__*/React.createElement(\"button\", {\n    className: \"symbol-btn\",\n    onClick: () => handleNumberClick('.'),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 223,\n      columnNumber: 11\n    }\n  }, \".\"), /*#__PURE__*/React.createElement(\"button\", {\n    className: \"convert-btn\",\n    onClick: convert,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 225,\n      columnNumber: 11\n    }\n  }, \"Convert\"))), result !== null && /*#__PURE__*/React.createElement(\"div\", {\n    className: \"result-display\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 230,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 231,\n      columnNumber: 11\n    }\n  }, \"Result: \", result), /*#__PURE__*/React.createElement(\"button\", {\n    className: \"save-btn\",\n    onClick: handleSave,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 232,\n      columnNumber: 11\n    }\n  }, \"Save\")), showHistory && /*#__PURE__*/React.createElement(\"div\", {\n    className: \"history-section\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 238,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 239,\n      columnNumber: 11\n    }\n  }, \"History\"), history.length === 0 ? /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 241,\n      columnNumber: 13\n    }\n  }, \"No history found.\") : history.map(conversion => /*#__PURE__*/React.createElement(\"div\", {\n    key: conversion._id,\n    className: \"history-item\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 244,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 245,\n      columnNumber: 17\n    }\n  }, `${conversion.inputValue} ${conversion.fromUnit} → ${conversion.toUnit} = ${conversion.result}`), /*#__PURE__*/React.createElement(\"button\", {\n    className: \"delete-btn\",\n    onClick: () => handleDelete(conversion._id),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 246,\n      columnNumber: 17\n    }\n  }, \"Delete\")))));\n};\nexport default UnitConverter;","map":{"version":3,"names":["React","useState","useEffect","axios","UnitConverter","inputValue","setInputValue","unitType","setUnitType","fromUnit","setFromUnit","toUnit","setToUnit","result","setResult","history","setHistory","showHistory","setShowHistory","convert","value","parseFloat","isNaN","conversionFactor","handleSave","newConversion","post","fetchHistory","res","get","data","handleDelete","id","delete","handleNumberClick","number","prev","handleBackspace","slice","toggleHistory","createElement","className","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber","onChange","e","target","Fragment","onClick","map","num","key","length","conversion","_id"],"sources":["D:/unit-converter/frontend/src/components/UnitConverter.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport axios from 'axios'; // Import Axios\r\nimport '../styles/UnitConverter.css'; // Import CSS styles\r\n\r\nconst UnitConverter = () => {\r\n  const [inputValue, setInputValue] = useState('');\r\n  const [unitType, setUnitType] = useState('Distance');\r\n  const [fromUnit, setFromUnit] = useState('meters');\r\n  const [toUnit, setToUnit] = useState('kilometers');\r\n  const [result, setResult] = useState(null);\r\n  const [history, setHistory] = useState([]);\r\n  const [showHistory, setShowHistory] = useState(false); // New state to toggle history display\r\n\r\n  // Conversion logic\r\n  const convert = () => {\r\n    let value = parseFloat(inputValue);\r\n    if (isNaN(value)) {\r\n      setResult('Invalid input');\r\n      return;\r\n    }\r\n\r\n    let conversionFactor = 1;\r\n\r\n    switch (unitType) {\r\n      case 'Distance':\r\n        if (fromUnit === 'meters' && toUnit === 'kilometers') {\r\n          conversionFactor = 0.001;\r\n        } else if (fromUnit === 'kilometers' && toUnit === 'meters') {\r\n          conversionFactor = 1000;\r\n        }\r\n        break;\r\n\r\n      case 'Temperature':\r\n        if (fromUnit === 'Celsius' && toUnit === 'Fahrenheit') {\r\n          setResult((value * 9) / 5 + 32);\r\n          return; // Return early\r\n        } else if (fromUnit === 'Fahrenheit' && toUnit === 'Celsius') {\r\n          setResult((value - 32) * (5 / 9));\r\n          return; // Return early\r\n        }\r\n        break;\r\n\r\n      case 'Volume':\r\n        if (fromUnit === 'liters' && toUnit === 'milliliters') {\r\n          conversionFactor = 1000;\r\n        } else if (fromUnit === 'milliliters' && toUnit === 'liters') {\r\n          conversionFactor = 0.001;\r\n        }\r\n        break;\r\n\r\n      case 'Time':\r\n        if (fromUnit === 'hours' && toUnit === 'minutes') {\r\n          conversionFactor = 60;\r\n        } else if (fromUnit === 'minutes' && toUnit === 'hours') {\r\n          conversionFactor = 1 / 60;\r\n        }\r\n        break;\r\n\r\n      case 'Weight':\r\n        if (fromUnit === 'kilograms' && toUnit === 'grams') {\r\n          conversionFactor = 1000;\r\n        } else if (fromUnit === 'grams' && toUnit === 'kilograms') {\r\n          conversionFactor = 0.001;\r\n        }\r\n        break;\r\n\r\n      default:\r\n        setResult('Conversion not supported');\r\n        return;\r\n    }\r\n\r\n    setResult(value * conversionFactor);\r\n  };\r\n\r\n  // Handle saving conversion history\r\n  const handleSave = async () => {\r\n    const newConversion = {\r\n      inputValue,\r\n      fromUnit,\r\n      toUnit,\r\n      result,\r\n    };\r\n    await axios.post('http://localhost:5000/api/conversions', newConversion);\r\n    fetchHistory();\r\n  };\r\n\r\n  // Fetch conversion history from server\r\n  const fetchHistory = async () => {\r\n    const res = await axios.get('http://localhost:5000/api/conversions');\r\n    setHistory(res.data);\r\n  };\r\n\r\n  // Handle deleting a history item\r\n  const handleDelete = async (id) => {\r\n    await axios.delete(`http://localhost:5000/api/conversions/${id}`);\r\n    fetchHistory();\r\n  };\r\n\r\n  useEffect(() => {\r\n    fetchHistory();\r\n  }, []);\r\n\r\n  // Handle number button clicks\r\n  const handleNumberClick = (number) => {\r\n    setInputValue((prev) => prev + number);\r\n  };\r\n\r\n  // Handle backspace button click\r\n  const handleBackspace = () => {\r\n    setInputValue((prev) => prev.slice(0, -1));\r\n  };\r\n\r\n  // Toggle history display\r\n  const toggleHistory = () => {\r\n    setShowHistory((prev) => !prev);\r\n  };\r\n\r\n  return (\r\n    <div className=\"converter-container\">\r\n      <nav className=\"navbar\">\r\n        <h1 className=\"navbar-heading\">Unit Converter</h1>\r\n      </nav>\r\n      <div className=\"unit-selection\">\r\n        <label>Select Unit Type:</label>\r\n        <select\r\n          className=\"unit-type-select\"\r\n          onChange={(e) => setUnitType(e.target.value)}\r\n        >\r\n          <option value=\"Distance\">Distance</option>\r\n          <option value=\"Temperature\">Temperature</option>\r\n          <option value=\"Volume\">Volume</option>\r\n          <option value=\"Time\">Time</option>\r\n          <option value=\"Weight\">Weight</option>\r\n        </select>\r\n      </div>\r\n\r\n      {/* Conversion Logic */}\r\n      {/* From and To Unit Selection */}\r\n      <div className=\"conversion-section\">\r\n        <label>From:</label>\r\n        <select className=\"unit-select\" onChange={(e) => setFromUnit(e.target.value)}>\r\n          {unitType === 'Distance' && (\r\n            <>\r\n              <option value=\"meters\">Meters</option>\r\n              <option value=\"kilometers\">Kilometers</option>\r\n            </>\r\n          )}\r\n          {unitType === 'Temperature' && (\r\n            <>\r\n              <option value=\"Celsius\">Celsius</option>\r\n              <option value=\"Fahrenheit\">Fahrenheit</option>\r\n            </>\r\n          )}\r\n          {unitType === 'Volume' && (\r\n            <>\r\n              <option value=\"liters\">Liters</option>\r\n              <option value=\"milliliters\">Milliliters</option>\r\n            </>\r\n          )}\r\n          {unitType === 'Time' && (\r\n            <>\r\n              <option value=\"hours\">Hours</option>\r\n              <option value=\"minutes\">Minutes</option>\r\n            </>\r\n          )}\r\n          {unitType === 'Weight' && (\r\n            <>\r\n              <option value=\"kilograms\">Kilograms</option>\r\n              <option value=\"grams\">Grams</option>\r\n            </>\r\n          )}\r\n        </select>\r\n\r\n        <label>To:</label>\r\n        <select className=\"unit-select\" onChange={(e) => setToUnit(e.target.value)}>\r\n          {unitType === 'Distance' && (\r\n            <>\r\n              <option value=\"meters\">Meters</option>\r\n              <option value=\"kilometers\">Kilometers</option>\r\n            </>\r\n          )}\r\n          {unitType === 'Temperature' && (\r\n            <>\r\n              <option value=\"Celsius\">Celsius</option>\r\n              <option value=\"Fahrenheit\">Fahrenheit</option>\r\n            </>\r\n          )}\r\n          {unitType === 'Volume' && (\r\n            <>\r\n              <option value=\"liters\">Liters</option>\r\n              <option value=\"milliliters\">Milliliters</option>\r\n            </>\r\n          )}\r\n          {unitType === 'Time' && (\r\n            <>\r\n              <option value=\"hours\">Hours</option>\r\n              <option value=\"minutes\">Minutes</option>\r\n            </>\r\n          )}\r\n          {unitType === 'Weight' && (\r\n            <>\r\n              <option value=\"kilograms\">Kilograms</option>\r\n              <option value=\"grams\">Grams</option>\r\n            </>\r\n          )}\r\n        </select>\r\n      </div>\r\n\r\n      <div className=\"input-section\">\r\n        <div className=\"input-display\">{inputValue || 'Enter a value'}</div>\r\n        <div className=\"number-buttons-grid\">\r\n          <button className=\"action-btn\" onClick={toggleHistory}>\r\n            History\r\n          </button>\r\n          <button className=\"clear-btn\" onClick={() => setInputValue('')}>Clear</button>\r\n          <button className=\"backspace-btn\" onClick={handleBackspace}>←</button>\r\n          {[1, 2, 3, 4, 5, 6, 7, 8, 9].map((num) => (\r\n            <button key={num} className=\"number-btn\" onClick={() => handleNumberClick(num)}>\r\n              {num}\r\n            </button>\r\n          ))}\r\n          <button className=\"number-btn\" onClick={() => handleNumberClick(0)}>0</button>\r\n          <button className=\"symbol-btn\" onClick={() => handleNumberClick('.')}>.</button>\r\n\r\n          <button className=\"convert-btn\" onClick={convert}>Convert</button>\r\n        </div>\r\n      </div>\r\n\r\n      {result !== null && (\r\n        <div className=\"result-display\">\r\n          <div>Result: {result}</div>\r\n          <button className=\"save-btn\" onClick={handleSave}>Save</button>\r\n        </div>\r\n      )}\r\n\r\n      {/* Show History if toggled */}\r\n      {showHistory && (\r\n        <div className=\"history-section\">\r\n          <h2>History</h2>\r\n          {history.length === 0 ? (\r\n            <p>No history found.</p>\r\n          ) : (\r\n            history.map((conversion) => (\r\n              <div key={conversion._id} className=\"history-item\">\r\n                <p>{`${conversion.inputValue} ${conversion.fromUnit} → ${conversion.toUnit} = ${conversion.result}`}</p>\r\n                <button className=\"delete-btn\" onClick={() => handleDelete(conversion._id)}>Delete</button>\r\n              </div>\r\n            ))\r\n          )}\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default UnitConverter;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}