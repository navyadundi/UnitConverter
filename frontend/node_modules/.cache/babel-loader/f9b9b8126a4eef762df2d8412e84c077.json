{"ast":null,"code":"var _jsxFileName = \"D:\\\\unit-converter\\\\frontend\\\\src\\\\components\\\\UnitConverter.jsx\";\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios'; // Import Axios\nimport '../styles/UnitConverter.css'; // Import CSS styles\n\nconst UnitConverter = () => {\n  const [inputValue, setInputValue] = useState('');\n  const [unitType, setUnitType] = useState('Distance');\n  const [fromUnit, setFromUnit] = useState('meters');\n  const [toUnit, setToUnit] = useState('kilometers');\n  const [result, setResult] = useState(null);\n  const [history, setHistory] = useState([]);\n  const convert = () => {\n    let value = parseFloat(inputValue);\n    if (isNaN(value)) {\n      setResult('Invalid input');\n      return;\n    }\n    let conversionFactor = 1;\n    switch (unitType) {\n      case 'Distance':\n        if (fromUnit === 'meters' && toUnit === 'kilometers') {\n          conversionFactor = 0.001;\n        } else if (fromUnit === 'kilometers' && toUnit === 'meters') {\n          conversionFactor = 1000;\n        }\n        break;\n      case 'Temperature':\n        if (fromUnit === 'Celsius' && toUnit === 'Fahrenheit') {\n          setResult(value * 9 / 5 + 32);\n          return; // Return early\n        } else if (fromUnit === 'Fahrenheit' && toUnit === 'Celsius') {\n          setResult((value - 32) * 5 / 9);\n          return; // Return early\n        }\n        break;\n      case 'Volume':\n        if (fromUnit === 'liters' && toUnit === 'milliliters') {\n          conversionFactor = 1000;\n        } else if (fromUnit === 'milliliters' && toUnit === 'liters') {\n          conversionFactor = 0.001;\n        }\n        break;\n      case 'Time':\n        if (fromUnit === 'hours' && toUnit === 'minutes') {\n          conversionFactor = 60;\n        } else if (fromUnit === 'minutes' && toUnit === 'hours') {\n          conversionFactor = 1 / 60;\n        }\n        break;\n      case 'Weight':\n        if (fromUnit === 'kilograms' && toUnit === 'grams') {\n          conversionFactor = 1000;\n        } else if (fromUnit === 'grams' && toUnit === 'kilograms') {\n          conversionFactor = 0.001;\n        }\n        break;\n      default:\n        setResult('Conversion not supported');\n        return;\n    }\n    setResult(value * conversionFactor);\n  };\n  const handleSave = async () => {\n    const newConversion = {\n      inputValue,\n      fromUnit,\n      toUnit,\n      result\n    };\n    await axios.post('http://localhost:5000/api/conversions', newConversion);\n    fetchHistory();\n  };\n  const fetchHistory = async () => {\n    const res = await axios.get('http://localhost:5000/api/conversions');\n    setHistory(res.data);\n  };\n  const handleDelete = async id => {\n    await axios.delete(`http://localhost:5000/api/conversions/${id}`);\n    fetchHistory();\n  };\n  useEffect(() => {\n    fetchHistory();\n  }, []);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"converter-container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"nav\", {\n    className: \"navbar\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    className: \"navbar-heading\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 9\n    }\n  }, \"Unit Converter\")), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"unit-selection\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 9\n    }\n  }, \"Select Unit Type:\"), /*#__PURE__*/React.createElement(\"select\", {\n    className: \"unit-type-select\",\n    onChange: e => setUnitType(e.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"option\", {\n    value: \"Distance\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 11\n    }\n  }, \"Distance\"), /*#__PURE__*/React.createElement(\"option\", {\n    value: \"Temperature\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 11\n    }\n  }, \"Temperature\"), /*#__PURE__*/React.createElement(\"option\", {\n    value: \"Volume\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 11\n    }\n  }, \"Volume\"), /*#__PURE__*/React.createElement(\"option\", {\n    value: \"Time\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 11\n    }\n  }, \"Time\"), /*#__PURE__*/React.createElement(\"option\", {\n    value: \"Weight\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 11\n    }\n  }, \"Weight\"))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"conversion-section\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 9\n    }\n  }, \"From:\"), /*#__PURE__*/React.createElement(\"select\", {\n    className: \"unit-select\",\n    onChange: e => setFromUnit(e.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 9\n    }\n  }, unitType === 'Distance' && /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"option\", {\n    value: \"meters\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 15\n    }\n  }, \"Meters\"), /*#__PURE__*/React.createElement(\"option\", {\n    value: \"kilometers\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 15\n    }\n  }, \"Kilometers\")), unitType === 'Temperature' && /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"option\", {\n    value: \"Celsius\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 15\n    }\n  }, \"Celsius\"), /*#__PURE__*/React.createElement(\"option\", {\n    value: \"Fahrenheit\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 15\n    }\n  }, \"Fahrenheit\")), unitType === 'Volume' && /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"option\", {\n    value: \"liters\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 133,\n      columnNumber: 15\n    }\n  }, \"Liters\"), /*#__PURE__*/React.createElement(\"option\", {\n    value: \"milliliters\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 134,\n      columnNumber: 15\n    }\n  }, \"Milliliters\")), unitType === 'Time' && /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"option\", {\n    value: \"hours\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 139,\n      columnNumber: 15\n    }\n  }, \"Hours\"), /*#__PURE__*/React.createElement(\"option\", {\n    value: \"minutes\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 140,\n      columnNumber: 15\n    }\n  }, \"Minutes\")), unitType === 'Weight' && /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"option\", {\n    value: \"kilograms\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 145,\n      columnNumber: 15\n    }\n  }, \"Kilograms\"), /*#__PURE__*/React.createElement(\"option\", {\n    value: \"grams\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 146,\n      columnNumber: 15\n    }\n  }, \"Grams\"))), /*#__PURE__*/React.createElement(\"label\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 151,\n      columnNumber: 9\n    }\n  }, \"To:\"), /*#__PURE__*/React.createElement(\"select\", {\n    className: \"unit-select\",\n    onChange: e => setToUnit(e.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 152,\n      columnNumber: 9\n    }\n  }, unitType === 'Distance' && /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"option\", {\n    value: \"meters\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 155,\n      columnNumber: 15\n    }\n  }, \"Meters\"), /*#__PURE__*/React.createElement(\"option\", {\n    value: \"kilometers\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 156,\n      columnNumber: 15\n    }\n  }, \"Kilometers\")), unitType === 'Temperature' && /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"option\", {\n    value: \"Celsius\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 161,\n      columnNumber: 15\n    }\n  }, \"Celsius\"), /*#__PURE__*/React.createElement(\"option\", {\n    value: \"Fahrenheit\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 162,\n      columnNumber: 15\n    }\n  }, \"Fahrenheit\")), unitType === 'Volume' && /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"option\", {\n    value: \"liters\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 167,\n      columnNumber: 15\n    }\n  }, \"Liters\"), /*#__PURE__*/React.createElement(\"option\", {\n    value: \"milliliters\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 168,\n      columnNumber: 15\n    }\n  }, \"Milliliters\")), unitType === 'Time' && /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"option\", {\n    value: \"hours\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 173,\n      columnNumber: 15\n    }\n  }, \"Hours\"), /*#__PURE__*/React.createElement(\"option\", {\n    value: \"minutes\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 174,\n      columnNumber: 15\n    }\n  }, \"Minutes\")), unitType === 'Weight' && /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"option\", {\n    value: \"kilograms\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 179,\n      columnNumber: 15\n    }\n  }, \"Kilograms\"), /*#__PURE__*/React.createElement(\"option\", {\n    value: \"grams\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 180,\n      columnNumber: 15\n    }\n  }, \"Grams\")))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"input-section\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 186,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"input-display\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 187,\n      columnNumber: 9\n    }\n  }, inputValue || \"Enter a value\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"number-buttons-grid\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 188,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    className: \"action-btn\",\n    onClick: () => alert('History clicked!'),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 189,\n      columnNumber: 11\n    }\n  }, \"History\"), /*#__PURE__*/React.createElement(\"button\", {\n    className: \"clear-btn wide\",\n    onClick: handleDelete,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 190,\n      columnNumber: 11\n    }\n  }, \"Clear\"), /*#__PURE__*/React.createElement(\"button\", {\n    className: \"backspace-btn\",\n    onClick: handleBackspace,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 191,\n      columnNumber: 11\n    }\n  }, \"\\u2190\"), [6, 7, 8, 9, 2, 3, 4, 5, 1].map(num => /*#__PURE__*/React.createElement(\"button\", {\n    key: num,\n    className: \"number-btn\",\n    onClick: () => handleNumberClick(num),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 193,\n      columnNumber: 13\n    }\n  }, num)), /*#__PURE__*/React.createElement(\"button\", {\n    className: \"number-btn\",\n    onClick: () => handleNumberClick(0),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 195,\n      columnNumber: 11\n    }\n  }, \"0\"), /*#__PURE__*/React.createElement(\"button\", {\n    className: \"symbol-btn\",\n    onClick: () => handleNumberClick('.'),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 196,\n      columnNumber: 11\n    }\n  }, \".\"), /*#__PURE__*/React.createElement(\"button\", {\n    className: \"convert-btn\",\n    onClick: convert,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 198,\n      columnNumber: 11\n    }\n  }, \"Convert\")), /*#__PURE__*/React.createElement(\"button\", {\n    className: \"convert-btn\",\n    onClick: convert,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 200,\n      columnNumber: 9\n    }\n  }, \"Convert\")), result !== null && /*#__PURE__*/React.createElement(\"div\", {\n    className: \"result-display\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 204,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 205,\n      columnNumber: 11\n    }\n  }, \"Result: \", result), /*#__PURE__*/React.createElement(\"button\", {\n    onClick: handleSave,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 206,\n      columnNumber: 11\n    }\n  }, \"Save\")), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"history-section\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 210,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 211,\n      columnNumber: 9\n    }\n  }, \"History\"), history.map(conversion => /*#__PURE__*/React.createElement(\"div\", {\n    key: conversion._id,\n    className: \"history-item\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 213,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 214,\n      columnNumber: 13\n    }\n  }, `${conversion.inputValue} ${conversion.fromUnit} → ${conversion.toUnit} = ${conversion.result}`), /*#__PURE__*/React.createElement(\"button\", {\n    onClick: () => handleDelete(conversion._id),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 215,\n      columnNumber: 13\n    }\n  }, \"Delete\")))));\n};\nexport default UnitConverter;","map":{"version":3,"names":["React","useState","useEffect","axios","UnitConverter","inputValue","setInputValue","unitType","setUnitType","fromUnit","setFromUnit","toUnit","setToUnit","result","setResult","history","setHistory","convert","value","parseFloat","isNaN","conversionFactor","handleSave","newConversion","post","fetchHistory","res","get","data","handleDelete","id","delete","createElement","className","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber","onChange","e","target","Fragment","onClick","alert","handleBackspace","map","num","key","handleNumberClick","conversion","_id"],"sources":["D:/unit-converter/frontend/src/components/UnitConverter.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport axios from 'axios'; // Import Axios\r\nimport '../styles/UnitConverter.css'; // Import CSS styles\r\n\r\nconst UnitConverter = () => {\r\n  const [inputValue, setInputValue] = useState('');\r\n  const [unitType, setUnitType] = useState('Distance');\r\n  const [fromUnit, setFromUnit] = useState('meters');\r\n  const [toUnit, setToUnit] = useState('kilometers');\r\n  const [result, setResult] = useState(null);\r\n  const [history, setHistory] = useState([]);\r\n\r\n  const convert = () => {\r\n    let value = parseFloat(inputValue);\r\n    if (isNaN(value)) {\r\n      setResult('Invalid input');\r\n      return;\r\n    }\r\n\r\n    let conversionFactor = 1;\r\n\r\n    switch (unitType) {\r\n      case 'Distance':\r\n        if (fromUnit === 'meters' && toUnit === 'kilometers') {\r\n          conversionFactor = 0.001;\r\n        } else if (fromUnit === 'kilometers' && toUnit === 'meters') {\r\n          conversionFactor = 1000;\r\n        }\r\n        break;\r\n\r\n      case 'Temperature':\r\n        if (fromUnit === 'Celsius' && toUnit === 'Fahrenheit') {\r\n          setResult((value * 9 / 5) + 32);\r\n          return; // Return early\r\n        } else if (fromUnit === 'Fahrenheit' && toUnit === 'Celsius') {\r\n          setResult((value - 32) * 5 / 9);\r\n          return; // Return early\r\n        }\r\n        break;\r\n\r\n      case 'Volume':\r\n        if (fromUnit === 'liters' && toUnit === 'milliliters') {\r\n          conversionFactor = 1000;\r\n        } else if (fromUnit === 'milliliters' && toUnit === 'liters') {\r\n          conversionFactor = 0.001;\r\n        }\r\n        break;\r\n\r\n      case 'Time':\r\n        if (fromUnit === 'hours' && toUnit === 'minutes') {\r\n          conversionFactor = 60;\r\n        } else if (fromUnit === 'minutes' && toUnit === 'hours') {\r\n          conversionFactor = 1 / 60;\r\n        }\r\n        break;\r\n\r\n      case 'Weight':\r\n        if (fromUnit === 'kilograms' && toUnit === 'grams') {\r\n          conversionFactor = 1000;\r\n        } else if (fromUnit === 'grams' && toUnit === 'kilograms') {\r\n          conversionFactor = 0.001;\r\n        }\r\n        break;\r\n\r\n      default:\r\n        setResult('Conversion not supported');\r\n        return;\r\n    }\r\n\r\n    setResult(value * conversionFactor);\r\n  };\r\n\r\n  const handleSave = async () => {\r\n    const newConversion = {\r\n      inputValue,\r\n      fromUnit,\r\n      toUnit,\r\n      result,\r\n    };\r\n    await axios.post('http://localhost:5000/api/conversions', newConversion);\r\n    fetchHistory();\r\n  };\r\n\r\n  const fetchHistory = async () => {\r\n    const res = await axios.get('http://localhost:5000/api/conversions');\r\n    setHistory(res.data);\r\n  };\r\n\r\n  const handleDelete = async (id) => {\r\n    await axios.delete(`http://localhost:5000/api/conversions/${id}`);\r\n    fetchHistory();\r\n  };\r\n\r\n  useEffect(() => {\r\n    fetchHistory();\r\n  }, []);\r\n\r\n  return (\r\n    <div className=\"converter-container\">\r\n      <nav className=\"navbar\">\r\n        <h1 className=\"navbar-heading\">Unit Converter</h1>\r\n      </nav>\r\n      <div className=\"unit-selection\">\r\n        <label>Select Unit Type:</label>\r\n        <select className=\"unit-type-select\" onChange={(e) => setUnitType(e.target.value)}>\r\n          <option value=\"Distance\">Distance</option>\r\n          <option value=\"Temperature\">Temperature</option>\r\n          <option value=\"Volume\">Volume</option>\r\n          <option value=\"Time\">Time</option>\r\n          <option value=\"Weight\">Weight</option>\r\n        </select>\r\n      </div>\r\n\r\n      {/* Conversion Logic */}\r\n      {/* From and To Unit Selection */}\r\n      <div className=\"conversion-section\">\r\n        <label>From:</label>\r\n        <select className=\"unit-select\" onChange={(e) => setFromUnit(e.target.value)}>\r\n          {unitType === 'Distance' && (\r\n            <>\r\n              <option value=\"meters\">Meters</option>\r\n              <option value=\"kilometers\">Kilometers</option>\r\n            </>\r\n          )}\r\n          {unitType === 'Temperature' && (\r\n            <>\r\n              <option value=\"Celsius\">Celsius</option>\r\n              <option value=\"Fahrenheit\">Fahrenheit</option>\r\n            </>\r\n          )}\r\n          {unitType === 'Volume' && (\r\n            <>\r\n              <option value=\"liters\">Liters</option>\r\n              <option value=\"milliliters\">Milliliters</option>\r\n            </>\r\n          )}\r\n          {unitType === 'Time' && (\r\n            <>\r\n              <option value=\"hours\">Hours</option>\r\n              <option value=\"minutes\">Minutes</option>\r\n            </>\r\n          )}\r\n          {unitType === 'Weight' && (\r\n            <>\r\n              <option value=\"kilograms\">Kilograms</option>\r\n              <option value=\"grams\">Grams</option>\r\n            </>\r\n          )}\r\n        </select>\r\n\r\n        <label>To:</label>\r\n        <select className=\"unit-select\" onChange={(e) => setToUnit(e.target.value)}>\r\n          {unitType === 'Distance' && (\r\n            <>\r\n              <option value=\"meters\">Meters</option>\r\n              <option value=\"kilometers\">Kilometers</option>\r\n            </>\r\n          )}\r\n          {unitType === 'Temperature' && (\r\n            <>\r\n              <option value=\"Celsius\">Celsius</option>\r\n              <option value=\"Fahrenheit\">Fahrenheit</option>\r\n            </>\r\n          )}\r\n          {unitType === 'Volume' && (\r\n            <>\r\n              <option value=\"liters\">Liters</option>\r\n              <option value=\"milliliters\">Milliliters</option>\r\n            </>\r\n          )}\r\n          {unitType === 'Time' && (\r\n            <>\r\n              <option value=\"hours\">Hours</option>\r\n              <option value=\"minutes\">Minutes</option>\r\n            </>\r\n          )}\r\n          {unitType === 'Weight' && (\r\n            <>\r\n              <option value=\"kilograms\">Kilograms</option>\r\n              <option value=\"grams\">Grams</option>\r\n            </>\r\n          )}\r\n        </select>\r\n      </div>\r\n\r\n      <div className=\"input-section\">\r\n        <div className=\"input-display\">{inputValue || \"Enter a value\"}</div>\r\n        <div className=\"number-buttons-grid\">\r\n          <button className=\"action-btn\" onClick={() => alert('History clicked!')}>History</button>\r\n          <button className=\"clear-btn wide\" onClick={handleDelete}>Clear</button>\r\n          <button className=\"backspace-btn\" onClick={handleBackspace}>←</button>\r\n          {[6, 7, 8, 9, 2, 3, 4, 5, 1].map(num => (\r\n            <button key={num} className=\"number-btn\" onClick={() => handleNumberClick(num)}>{num}</button>\r\n          ))}\r\n          <button className=\"number-btn\" onClick={() => handleNumberClick(0)}>0</button>\r\n          <button className=\"symbol-btn\" onClick={() => handleNumberClick('.')}>.</button>\r\n          \r\n          <button className=\"convert-btn\" onClick={convert}>Convert</button>\r\n        </div>\r\n        <button className=\"convert-btn\" onClick={convert}>Convert</button>\r\n      </div>\r\n\r\n      {result !== null && (\r\n        <div className=\"result-display\">\r\n          <div>Result: {result}</div>\r\n          <button onClick={handleSave}>Save</button>\r\n        </div>\r\n      )}\r\n\r\n      <div className=\"history-section\">\r\n        <h2>History</h2>\r\n        {history.map((conversion) => (\r\n          <div key={conversion._id} className=\"history-item\">\r\n            <p>{`${conversion.inputValue} ${conversion.fromUnit} → ${conversion.toUnit} = ${conversion.result}`}</p>\r\n            <button onClick={() => handleDelete(conversion._id)}>Delete</button>\r\n          </div>\r\n        ))}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default UnitConverter;\r\n\r\n\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}